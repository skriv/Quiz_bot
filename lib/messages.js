const getUserName = require('./usernames-dictionary').getName;
const getUserGender = require('./usernames-dictionary').getGender;

function getAny(...messages) {
  return messages[Math.floor(Math.random() * messages.length)];
}

const START_EMOJI = 'üí≠';
const WRONG_EMOJI = 'üôà';
const RIGHT_EMOJI = 'üëç';
const STOP_EMOJI = 'üõë';
const QUESTION_EMOJI = '‚ùì–í–æ–ø—Ä–æ—Å: ';
const BANK_EMOJI = 'üèÜ';
const HINT_EMOJIS = ['üïõ', 'üïí', 'üïß', 'üïò'];
const PLACE_EMOJIS = {pile: 'üëç', pound: 'üëç', euro: 'üëç', buck: 'üëç', yen: 'üëç', fly: 'üëç'};

function getPlaceEmoji(place) {
  switch (place) {
    case 0:
      return PLACE_EMOJIS.pile;
    case 1:
    case 2:
      return PLACE_EMOJIS.pound;
    case 3:
    case 4:
      return PLACE_EMOJIS.euro;
    case 5:
    case 6:
      return PLACE_EMOJIS.buck;
    case 7:
    case 8:
    case 9:
    case 10:
      return PLACE_EMOJIS.yen;
    default:
      return PLACE_EMOJIS.fly;
  }
}

const API = {
  startGame: () => `${START_EMOJI} ${getAny(
    '–ù–∞—á–∏–Ω–∞–µ–º'
  )}`,
  hint: (hint, question, number) => `${QUESTION_EMOJI}${question}\n\n${HINT_EMOJIS[number - 1] || ''} –ü–æ–¥—Å–∫–∞–∑–∫–∞: ${hint}`,
  question: (counter, question) => `${QUESTION_EMOJI} ${counter}. ${question}`,
  stop: player => `${STOP_EMOJI} ${player}, —Å–ø–∞—Å–∏–±–æ. –ñ–¥—É —Ç–µ–±—è —Å–Ω–æ–≤–∞.`,
  // Add places instead of score
  end: winners => `${BANK_EMOJI} *–¢—ã –ø–æ–±–µ–¥–∏—Ç–µ–ª—å!*

${winners.map((it, place) => `${getPlaceEmoji(place)} *${getUserName(it)}*  –æ—á–∫–æ–≤(–∞): ${it.score}, –æ—Ç–≤–µ—Ç–æ–≤: ${it.score}`).join('\n')}

`,
  trollingMessages: (user) => {
    if (getUserGender(user) === 'female') {
      return API.womanTrollingMessages(user);
    }
    const login = user.username;
    const userName = getUserName(user);

    return getAny(
      `@${login} :-*`
    );
  },
  womanTrollingMessages: (user) => {
    const login = user.username;
    const userName = getUserName(user);

    return getAny(
      `@${login}`,
      `–¢—ã –º–Ω–µ –Ω—Ä–∞–≤–∏—à—å—Å—è, ${userName}.`
    );
  },
  nobodyIsRight: (question) => `${WRONG_EMOJI}Ô∏è ${getAny(
    `–õ—é–±–æ–π —à–∫–æ–ª—å–Ω–∏–∫ –∑–Ω–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ *${question.answer}*.`
  )}`,
  rightAnswer: (user) => {
    const userName = getUserName(user);

    return `${RIGHT_EMOJI} ${getAny(
      `–ü—Ä–∞–≤–∏–ª—å–Ω–æ, ${userName}! –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å!`
    )}`
  }
};

module.exports = API;
